{"version":3,"sources":["store/actions/action.js","services/cloudinaryService.js","comps/Header.jsx","services/eventBusService.js","pages/Content.jsx","comps/Footer.jsx","App.jsx","store/reducers/reducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["loadImg","img","dispatch","a","type","err","console","log","loadRotationDegrees","degrees","cloudinaryService","uploadImg","target","UPLOAD_URL","formData","FormData","append","files","fetch","method","body","res","json","data","url","_Header","handleChange","imgUrl","Image","crossOrigin","src","onload","props","className","htmlFor","style","display","onChange","this","id","name","accept","Component","mapDispatchToProps","Header","connect","busService","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","dispatchEvent","CustomEvent","_Content","canvasRef","React","createRef","loadImgToCanvas","canvas","current","ctx","getContext","clearRect","width","height","drawImage","rotateImg","canvasWidth","canvasHeight","save","translate","rotate","Math","PI","restore","rotated","xOffSet","yOffSet","orientation","_getImgOrientation","_drawSquareImage","_drawHorizontalImage","_drawVerticalImage","naturalWidth","naturalHeight","handleClick","logBlobToConsole","toBlob","blob","URL","createObjectURL","unsubscribe","prevProps","ref","onClick","Content","state","Footer","App","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df7671f9.chunk.js","sourcesContent":["\nexport function loadImg(img) {\n  return async dispatch => {\n    try {\n      dispatch({ type: 'SET_IMG', img })\n    }\n    catch (err) {\n      console.log('err in loadImg', err);\n    }\n\n  }\n}\n\nexport function loadRotationDegrees(degrees) {\n  return async dispatch => {\n    try {\n      dispatch({ type: 'SET_DEGREES', degrees })\n    }\n    catch (err) {\n      console.log('err in loadRotationDegreess', err);\n    }\n  }\n}\n\n\n\n\n","\nexport const cloudinaryService = {\n    uploadImg\n}\n\nasync function uploadImg(target) {\n    const CLOUD_NAME = \"dcnijwmki\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', target.files[0])\n    formData.append('upload_preset', 'iqbe0osh');\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        return data.url\n\n    } catch (err) {\n        console.log(err);\n    }\n  \n}\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { loadImg, loadRotationDegrees } from '../store/actions/action.js'\r\nimport { cloudinaryService } from '../services/cloudinaryService.js'\r\n\r\nclass _Header extends Component {\r\n\r\n    handleChange = () => async ({ target }) => {\r\n        const imgUrl = await cloudinaryService.uploadImg(target)\r\n        const img = new Image()\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.src = imgUrl\r\n        img.onload = () => {\r\n            this.props.loadImg(img)\r\n            this.props.loadRotationDegrees(0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className=\"btn upload-btn\">\r\n                    <label htmlFor=\"file-upload\">\r\n                       <div className=\"square\"></div>\r\n                        <input style={{ display: 'none' }} onChange={this.handleChange('imgUrl')} type=\"file\"\r\n                            id=\"file-upload\" name=\"file-upload\"\r\n                            accept=\"image/*\">\r\n                        </input>\r\n                    </label>\r\n                </div>\r\n            </header >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadImg,\r\n    loadRotationDegrees\r\n}\r\n\r\n\r\nexport const Header = connect(null, mapDispatchToProps)(_Header)","function on(eventName, listener) {\n    const callListener = ({ detail }) => {\n        listener(detail)\n    }\n    window.addEventListener(eventName, callListener)\n    return () => {\n        window.removeEventListener(eventName, callListener)\n    }\n}\n\nfunction emit(eventName, data) {\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\n\nexport const busService = { on, emit }","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { loadImg, loadRotationDegrees} from '../store/actions/action.js'\r\nimport {busService} from '../services/eventBusService.js'\r\n\r\nclass _Content extends Component {\r\n\r\n    canvasRef = React.createRef()\r\n\r\n    unsubscribe\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = busService.on('logToConsole', () => {\r\n            this.logBlobToConsole()\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.img !== this.props.img) {\r\n            this.loadImgToCanvas()\r\n        }\r\n        if (prevProps.degrees !== this.props.degrees) {\r\n            this.rotateImg()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe()\r\n    }\r\n\r\n    loadImgToCanvas = () => {\r\n        const { img } = this.props\r\n        const canvas = this.canvasRef.current\r\n        const ctx = canvas.getContext(\"2d\")\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        this.drawImage(ctx, img, canvas.width, canvas.height)\r\n    }\r\n\r\n    rotateImg = () => {\r\n        const { img, degrees } = this.props\r\n        const canvas = this.canvasRef.current\r\n        const canvasWidth = canvas.width\r\n        const canvasHeight = canvas.height\r\n        const ctx = canvas.getContext(\"2d\")\r\n        ctx.save()\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(degrees * Math.PI / 180);\r\n        this.drawImage(ctx, img, canvasWidth, canvasHeight, true)\r\n        ctx.restore()\r\n    }\r\n\r\n    drawImage = (ctx, img, canvasWidth, canvasHeight, rotated = false) => {\r\n        let xOffSet = rotated ? (-canvasWidth / 2) : 0\r\n        let yOffSet = rotated ? (-canvasHeight / 2) : 0\r\n\r\n        const orientation = this._getImgOrientation(img)\r\n\r\n        switch (orientation) {\r\n            case 'sqaure':\r\n                this._drawSquareImage(ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight)\r\n                break\r\n            case 'horizontal':\r\n                this._drawHorizontalImage(ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight)\r\n                break\r\n            case 'vertical':\r\n                this._drawVerticalImage(ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight)\r\n                break\r\n        }\r\n    }\r\n\r\n    _drawHorizontalImage = (ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight) => {\r\n        ctx.drawImage(img, img.width / 7, 0, (img.width / 7) * 5, img.height, xOffSet, yOffSet, canvasWidth, canvasHeight)\r\n    }\r\n\r\n    _drawVerticalImage = (ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight) => {\r\n        ctx.drawImage(img, 0, img.height / 7, img.width, (img.height / 7) * 5, xOffSet, yOffSet, canvasWidth, canvasHeight)\r\n    }\r\n\r\n    _drawSquareImage = (ctx, img, xOffSet, yOffSet, canvasWidth, canvasHeight) => {\r\n        img.height > canvasHeight ? ctx.drawImage(img, xOffSet, yOffSet, canvasWidth, canvasHeight) : ctx.drawImage(img, (canvasWidth - img.width) / 2 + xOffSet, (canvasHeight - img.height) / 2 + yOffSet, img.width, img.height)\r\n    }\r\n\r\n    _getImgOrientation = (img) => {\r\n        let orientation\r\n        if (img.naturalWidth === img.naturalHeight) {\r\n            orientation = 'sqaure'\r\n        }\r\n        else {\r\n            orientation = img.naturalWidth > img.naturalHeight ? 'horizontal' : 'vertical'\r\n        }\r\n        return orientation\r\n    }\r\n\r\n    handleClick = () => {\r\n        let { degrees } = this.props\r\n        degrees += 90\r\n        this.props.loadRotationDegrees(degrees)\r\n    }\r\n\r\n    logBlobToConsole = () => {\r\n        const canvas = this.canvasRef.current\r\n        canvas.toBlob(\r\n            blob => {\r\n                const img=new Image()\r\n                img.src = URL.createObjectURL(blob);\r\n                console.log(`Link to the blob as an image from the canvas. (go to the full link, (include blob: in the beginning )): ${img.src}`)\r\n            },\r\n            'image/jpeg',\r\n            0.9,\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-container\" >\r\n                <div className=\"canvas-container\">\r\n                    <canvas ref={this.canvasRef} id=\"canvas\" height=\"300\" width=\"300\" >Canvas</canvas>\r\n                </div>\r\n                <button className=\"btn rotate-btn\" onClick={this.handleClick}>Rotate</button >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        img: state.img,\r\n        degrees: state.degrees\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadImg,\r\n    loadRotationDegrees\r\n}\r\n\r\nexport const Content = connect(mapStateToProps, mapDispatchToProps)(_Content)","import React from \"react\";\r\nimport { busService } from \"../services/eventBusService\";\r\n\r\nexport function Footer() {\r\n\r\n    function notifyClick(){\r\n        busService.emit('logToConsole')\r\n    }\r\n\r\n    return (\r\n        <footer className=\"footer\" onClick={notifyClick}></footer>\r\n    )\r\n}","import React, { Component } from 'react'\nimport { Header } from './comps/Header.jsx'\nimport { Content } from './pages/Content.jsx'\nimport { Footer } from './comps/Footer.jsx'\n\n\nexport class App extends Component {\n\n  render() {\n    return (\n      <div className=\"app main-container\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    )\n  }\n}\n\n","const initialState = {\r\n    img: null,\r\n    degrees: 0\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_IMG':\r\n            return {\r\n                ...state,\r\n                img: action.img\r\n            }\r\n        case 'SET_DEGREES':\r\n            return {\r\n                ...state,\r\n                degrees: action.degrees\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport { reducer } from './reducers/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App.jsx';\nimport { store } from './store/store.js';\nimport './assets/scss/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}